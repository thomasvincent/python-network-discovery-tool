{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to python-network-discovery-tool Documentation","text":"<p>This is the documentation site for python-network-discovery-tool.</p>"},{"location":"#overview","title":"Overview","text":"<p>This documentation provides information about the project, how to use it, and how to contribute.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code># Add installation instructions here\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<pre><code># Add usage examples here\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please feel free to submit a Pull Request.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide will help you get started with python-network-discovery-tool.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Prerequisite 1</li> <li>Prerequisite 2</li> <li>Prerequisite 3</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<pre><code># Add detailed installation instructions here\n</code></pre>"},{"location":"getting-started/#configuration","title":"Configuration","text":"<pre><code># Add configuration examples here\n</code></pre>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<ul> <li>Link to other documentation pages</li> <li>Additional resources</li> </ul>"},{"location":"release-process/","title":"Release Process","text":"<p>This document outlines the release process for the Network Discovery Tool. It provides a step-by-step guide for maintainers to follow when releasing new versions of the software.</p>"},{"location":"release-process/#release-workflow","title":"Release Workflow","text":"<p>The project follows a GitFlow-inspired workflow:</p> <ol> <li>Development happens on the <code>develop</code> branch</li> <li>For releases, a release branch is created from <code>develop</code></li> <li>After testing and finalization, the release branch is merged into <code>main</code></li> <li>The release branch is also merged back into <code>develop</code></li> <li>The release is tagged and published</li> </ol>"},{"location":"release-process/#version-numbering","title":"Version Numbering","text":"<p>The project follows Semantic Versioning:</p> <ul> <li>MAJOR version when you make incompatible API changes</li> <li>MINOR version when you add functionality in a backward-compatible manner</li> <li>PATCH version when you make backward-compatible bug fixes</li> </ul>"},{"location":"release-process/#release-checklist","title":"Release Checklist","text":"<p>Before initiating a release, ensure:</p> <ul> <li>All tests are passing</li> <li>Documentation is up-to-date</li> <li>The changelog is updated with all notable changes</li> <li>All pull requests for the release have been merged into <code>develop</code></li> </ul>"},{"location":"release-process/#release-process_1","title":"Release Process","text":""},{"location":"release-process/#option-1-using-github-actions-recommended","title":"Option 1: Using GitHub Actions (Recommended)","text":"<ol> <li>Go to the GitHub repository's \"Actions\" tab</li> <li>Select the \"Release\" workflow</li> <li>Click \"Run workflow\"</li> <li>Enter the version number (e.g., <code>0.3.0</code>)</li> <li>Choose whether to run in dry-run mode</li> <li>Choose whether to publish to PyPI</li> <li>Click \"Run workflow\"</li> </ol> <p>The GitHub Action will: - Run tests - Update version numbers - Update the changelog - Create a git tag - Create a GitHub release - Build and publish the package to PyPI (if selected)</p>"},{"location":"release-process/#option-2-using-the-release-script-locally","title":"Option 2: Using the Release Script Locally","text":"<ol> <li> <p>Ensure you have the necessary dependencies:    <pre><code>pip install build twine pytest pytest-cov\n</code></pre></p> </li> <li> <p>Run the release script:    <pre><code>python scripts/release.py 0.3.0\n</code></pre></p> </li> </ol> <p>You can add the <code>--dry-run</code> flag to test the process without making any changes:    <pre><code>python scripts/release.py --dry-run 0.3.0\n</code></pre></p> <p>You can add the <code>--no-publish</code> flag to skip publishing to PyPI:    <pre><code>python scripts/release.py --no-publish 0.3.0\n</code></pre></p>"},{"location":"release-process/#option-3-using-gitflow-with-release-branches","title":"Option 3: Using GitFlow with Release Branches","text":"<ol> <li> <p>Create a release branch from <code>develop</code>:    <pre><code>python scripts/create_release_branch.py 0.3.0\n</code></pre></p> </li> <li> <p>Make any final adjustments to the release in the release branch</p> </li> <li> <p>When ready, merge the release branch into <code>main</code>:    <pre><code>git checkout main\ngit merge --no-ff release/0.3.0\n</code></pre></p> </li> <li> <p>Create a tag for the release:    <pre><code>git tag -a v0.3.0 -m \"Release 0.3.0\"\ngit push origin v0.3.0\n</code></pre></p> </li> <li> <p>Merge the release branch back into <code>develop</code>:    <pre><code>git checkout develop\ngit merge --no-ff release/0.3.0\n</code></pre></p> </li> <li> <p>Delete the release branch:    <pre><code>git branch -d release/0.3.0\ngit push origin --delete release/0.3.0\n</code></pre></p> </li> <li> <p>Create a GitHub release:    <pre><code>gh release create v0.3.0 --title \"Release 0.3.0\" --notes-file release_notes.md\n</code></pre></p> </li> <li> <p>Build and publish the package to PyPI:    <pre><code>python -m build\npython -m twine upload dist/*\n</code></pre></p> </li> </ol>"},{"location":"release-process/#post-release-tasks","title":"Post-Release Tasks","text":"<p>After a successful release:</p> <ol> <li> <p>Bump the version number for development:    <pre><code>python scripts/bump_dev_version.py\n</code></pre>    This will increment the minor version and add a \".dev0\" suffix (e.g., 0.3.0 \u2192 0.4.0.dev0)</p> </li> <li> <p>Announce the release to users through appropriate channels</p> </li> <li>Update the documentation site if necessary</li> <li>Close any issues that were fixed in the release</li> <li>Plan the next release cycle</li> </ol>"},{"location":"release-process/#hotfix-process","title":"Hotfix Process","text":"<p>For critical bug fixes that need to be released immediately:</p> <ol> <li> <p>Create a hotfix branch from <code>main</code>:    <pre><code>git checkout main\ngit checkout -b hotfix/0.3.1\n</code></pre></p> </li> <li> <p>Fix the bug and commit the changes</p> </li> <li> <p>Update the version number and changelog</p> </li> <li> <p>Merge the hotfix branch into <code>main</code>:    <pre><code>git checkout main\ngit merge --no-ff hotfix/0.3.1\n</code></pre></p> </li> <li> <p>Tag the release:    <pre><code>git tag -a v0.3.1 -m \"Hotfix 0.3.1\"\ngit push origin v0.3.1\n</code></pre></p> </li> <li> <p>Merge the hotfix branch into <code>develop</code>:    <pre><code>git checkout develop\ngit merge --no-ff hotfix/0.3.1\n</code></pre></p> </li> <li> <p>Delete the hotfix branch:    <pre><code>git branch -d hotfix/0.3.1\ngit push origin --delete hotfix/0.3.1\n</code></pre></p> </li> <li> <p>Follow the same steps as a regular release for creating a GitHub release and publishing to PyPI</p> </li> </ol>"},{"location":"release-process/#troubleshooting","title":"Troubleshooting","text":""},{"location":"release-process/#common-issues","title":"Common Issues","text":"<ol> <li>Tests failing during release</li> <li>Fix the failing tests in the <code>develop</code> branch</li> <li> <p>Create a new release branch once tests are passing</p> </li> <li> <p>Version conflicts</p> </li> <li>Ensure the version number is incremented correctly</li> <li> <p>Check that the version number is updated in all necessary files</p> </li> <li> <p>PyPI upload issues</p> </li> <li>Verify your PyPI credentials</li> <li>Ensure the package version doesn't already exist on PyPI</li> </ol>"},{"location":"release-process/#getting-help","title":"Getting Help","text":"<p>If you encounter issues with the release process, please:</p> <ol> <li>Check the GitHub Actions logs for detailed error information</li> <li>Review this documentation for any steps you might have missed</li> <li>Reach out to the maintainers for assistance</li> </ol>"}]}